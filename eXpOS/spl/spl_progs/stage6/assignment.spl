// loading Init code from disk block 7 and 8
loadi(65 , 7);
loadi(66 , 8);

// Interrupt 10 routine: Exit from disk block 35 and 36
loadi(22 , 35);
loadi(23 , 36);

// load the exception handler from disk blosk 15 and 16
loadi(2 , 15);
loadi(3 , 16);


// setting the page table base address for init code
PTBR = PAGE_TABLE_BASE;
// total pages allocated to init code
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";

[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";

[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code : starting logical address: 4*512 = 2048
// first 8 word contains meta-data
// hence actual entry point is 2056

[PTBR+8] = 65;
[PTBR+9] = "0100";

[PTBR+10] = 66;
[PTBR+11] = "0100";

[PTBR+12] = -1;
[PTBR+13] = "0000";

[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";

[PTBR+18] = 77;
[PTBR+19] = "0110";


print "Stage6 Startup";

SP = 8*512;
[76*512] = [65*512 + 1];

ireturn;

