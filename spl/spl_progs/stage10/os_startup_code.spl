//  The eXpOS ABI stipulates that the code for a shared library 
//  must be loaded to disk blocks 13 and 14 of the disk. 
//  During OS startup, the OS is supposed to load this code into memory pages 63 and 64. 
//  This library code must be attached to logical page 0 and logical page 1 of each process. 
//  Thus, this code will be shared by every application program running on the operating system 
//  and is called the common shared library or simply the library.
loadi(63,13);
loadi(64,14);

// loading write interrupt routine 
loadi(16,29);
loadi(17,30);

// loading timer interrupt routine
loadi(4, 17);
loadi(5, 18);

// loading init code
loadi(65,7);
loadi(66,8);

// loading int10 module
loadi(22,35);
loadi(23,36);

// loading exception handler code 
loadi(2, 15);
loadi(3, 16);


PTBR = PAGE_TABLE_BASE;
// total address space is 10
PTLR = 10;


//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";

[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";

[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code : starting logical address: 4*512 = 2048
// first 8 word contains meta-data
// hence actual entry point is 2056

[PTBR+8] = 65;
[PTBR+9] = "0100";

[PTBR+10] = 66;
[PTBR+11] = "0100";

[PTBR+12] = -1;
[PTBR+13] = "0000";

[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";

[PTBR+18] = 77;
[PTBR+19] = "0110";

// setting user area page number in the process table 
// set to 80 because it is the first free available page.
[PROCESS_TABLE + 11 ] =  80;

// setting the PID
[PROCESS_TABLE + 1] = 0;

// setting the system status table 
[SYSTEM_STATUS_TABLE + 1] = 0;



SP = 8*512;
[76*512] = [65*512 + 1];


print "Stage 9";
ireturn;
